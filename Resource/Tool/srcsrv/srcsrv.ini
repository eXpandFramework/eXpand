;
; srcsrv.ini
;
; Use this file to store configuration used by the source server,
; both at build time and debug time.  It is required at build time
; when the pdbs are being source indexed.  It is optional at debug
; time.

; All lines beginning with a semicolon (such as this) are ignored
; and can be used as comments.  Blank lines are also ignored.
; Note that the first non-whitespace character on a line must be
; a semicolon, for the line to be registered as a comment.  Semicolons that
; exist anywhere in the middle of text is treated as part of the text. 



[variables]

; The variables section is generally used store a logical name for a 
; version control server.

; When source indexing a build, there must be an entry for every version
; control server that is being accessed.  The format of the data is as so...
;   LOGICALNAME=serverinfo

; When using Perforce, the server info consists of the full network path to
; the version control server, followed by a colon, followed by the port number
; it uses.  Example:

MYSERVER=mymachine.sys-mygroup.corp.microsoft.com:1666

; Here is a similar entry for Visual Source Safe

ANOTHERSERVER=\\junkbox\safedb\

; It is okay to have extra entries that are not used.  They will be ignored.
; Consequently, you can keep a single corporate wide copy of this file that
; supports all the projects in your company.  It can be distributed to all
; engineers that might want to debug from one of your systems.  The idea is
; that this file should be kept as a unified list that assures that all
; the version control servers in your company have a unique name so that
; each one can be identified without problem at debug time.

; However if this file is used properly at the time of the build, there should
; be no need for these entries at the debugger client side because the 
; information is stored in the pdb.  Therefore it is best to keep these 
; variables blank on the clients, UNLESS a version control server has been 
; renamed since the module was built or you wish to mirror the version 
; control server to another one to be used specifically for read-only 
; access by debugger clients.

; You can use these entries to redirect source server to a share or http site.
; See debugger.chm for details
;
;SRCSRVCMD=
;MY_SOURCE_ROOT=c:\home\tmp\root
;SRCSRVTRG=%my_source_root%\%var2%\%var3%\%var4%\%fnfile%(%var1%)



[trusted commands]

;An extraction command that begins with any of the text displayed 
;in the following entries will never present a warning to the user
;about potential security problems.

boguscmd.exe

;You can also replace a portion of an extraction command.  
;This is useful for ;specifying a full path to the executable, 
;reducing the security risks.

someprogram.exe=c:\bin\x86\someprogram.exe



[server errors]

; If a debugger client is trying access a version control system that is
; unavailable for any reason, there can be much time wasted trying to get
; source from a location that will never work.  This section is a way
; to recognize such a failure and prevent further attempted access 
; within the session.  
;
; If this name is "all", then this entry will apply to all commands.  
;
; If this name is "default", then this entry will apply to
; all pdbs that have no SRCSRVERCRTL entry in the variables section
; of either the pdb or ini file.  
;
; If this name matches the SRCSRVVERCTRL variable then the entry will
; apply.
;
; Lastly, if this name matches the beginning text of the command that 
; is executed (similar to how "trusted commands" is processed), then
; this entry will apply.
;
; You can have as many entries as you want. They will all be tested.

; The text of the entry must begin with "varX" where "X" indicates the
; field in the source entry that indicates the actual version control 
; server location.  For our Source Depot scripts, this is "var2".

; After the comma is the text that the extraction command will emit
; when such a failure occurs.  If an extraction fails and the output
; text matches the text here, all future attempts to extract source 
; from a matching server (indicated in the var field) will be bypassed
; until the debugging is restarted.

; This section is not needed if the source indexing scripts store this 
; information properly in the pdb.

perforce=var2,Connect to server failed;

vss=var3,there was an error processing this file
